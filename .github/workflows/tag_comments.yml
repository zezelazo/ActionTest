name: Tag comments 

# Define the event that triggers the workflow
on:
  workflow_dispatch:
    # Run the workflow every hour

 
env:
  # Set the value of the GH_TOKEN environment variable to the token associated with the GitHub App used to run the workflow
  GH_TOKEN: ${{ github.token }}

# Define the job that the workflow will run
jobs:
  tag-issues:
    runs-on: ubuntu-latest
    
    # Allow the workflow to modify issues in the repository
    permissions:
      issues: write 
      contents: read

    steps:
      # Checkout the code from the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Tag issues based on their labels, assignees, and creation time
     
      - name: Get Discussions without Area Label
        id: get-discussions
        uses: palmerhq/github-graphql@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          query: |
            query ($owner: String!, $repo: String!, $cursor: String) {
              repository(owner: $owner, name: $repo) {
                discussions(first: 100, after: $cursor) {
                  pageInfo {
                    hasNextPage
                    endCursor
                  }
                  nodes {
                    id
                    title
                    labels(first: 20) {
                      nodes {
                        name
                      }
                    }
                  }
                }
              }
            }
          variables: |
            {
              "owner": "${{ github.repository_owner }}",
              "repo": "${{ github.repository }}",
              "cursor": null
            }
        continue-on-error: true

      - name: Add Area Unknown Label
        if: steps.get-discussions.outputs.data != null
        run: |
          $headers = @{
            "Authorization" = "Bearer $env:GITHUB_TOKEN"
            "Content-Type" = "application/json"
          }
          $discussions = ${{ steps.get-discussions.outputs.data }}.repository.discussions.nodes
          foreach ($discussion in $discussions) {
            $has_area_label = $false
            foreach ($label in $discussion.labels.nodes) {
              if ($label.name -like "Ã¡rea-*") {
                $has_area_label = $true
                break
              }
            }
            if (!$has_area_label) {
              Write-Host "Discussion: $($discussion.title)"
              $body = @{
                labels = @("area-unknown")
              } | ConvertTo-Json
              Invoke-RestMethod -Uri "https://api.github.com/repos/$($env:GITHUB_REPOSITORY)/discussions/$($discussion.id)/labels" -Method POST -Headers $headers -Body $body | Out-Null
            }
          }