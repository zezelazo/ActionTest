name: Tag comments 

# Define the event that triggers the workflow
on:
  workflow_dispatch:
    # Run the workflow every hour

 
env:
  # Set the value of the GH_TOKEN environment variable to the token associated with the GitHub App used to run the workflow
  GH_TOKEN: ${{ github.token }}

# Define the job that the workflow will run
jobs:
  tag-issues:
    runs-on: ubuntu-latest
    
    # Allow the workflow to modify issues in the repository
    permissions:
      issues: write 
      contents: read

    steps:
      # Checkout the code from the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Tag issues based on their labels, assignees, and creation time
     
      - name: Get Discussions without Area Label
        id: get-discussions
        run: |
          $query = @"
            query {
              repository(name: "$env:GITHUB_REPOSITORY", owner: "$env:GITHUB_REPOSITORY_OWNER") {
                discussions(first: 100) {
                  nodes {
                    id
                    title
                    labels(first: 10) {
                      nodes {
                        name
                      }
                    }
                  }
                }
              }
            }"@
            
          $headers = @{
            "Authorization" = "Bearer $env:GITHUB_TOKEN"
            "Content-Type" = "application/json"
          }
          $response = Invoke-RestMethod -Uri "https://api.github.com/graphql" -Method POST -Headers $headers -Body (ConvertTo-Json -InputObject @{ query = $query })
          $discussions = $response.data.repository.discussions.nodes
          $discussions_without_label = @()
          foreach ($discussion in $discussions) {
            if (-not ($discussion.labels.nodes.name -like "área-*")) {
              $discussions_without_label += $discussion
            }
          }
          Write-Output "Discussions without 'área-*' label: $($discussions_without_label.Count)"
          Write-Output "Discussion titles:"
          foreach ($discussion in $discussions_without_label) {
            Write-Output "- $($discussion.title)"
          }

      - name: Add Area Unknown Label
        if: steps.get-discussions.rc == '0'
        run: |
          $query = @"
            mutation AddLabelToDiscussion($discussionId: ID!, $labelName: String!) {
              addLabelsToLabelable(input: { labelableId: $discussionId, labelIds: [$labelName] }) {
                clientMutationId
              }
            }
"@
          $headers = @{
            "Authorization" = "Bearer $env:GITHUB_TOKEN"
            "Content-Type" = "application/json"
          }
          $discussions = ${{ steps.get-discussions.outputs.stdout | ConvertFrom-Json }}
          foreach ($discussion in $discussions) {
            $has_area_label = $false
            foreach ($label in $discussion.labels.nodes) {
              if ($label.name -like "área-*") {
                $has_area_label = $true
                break
              }
            }
            if (!$has_area_label) {
              Write-Host "Adding 'area-unknown' label to discussion: $($discussion.title)"
              $variables = @{
                discussionId = $discussion.id
                labelName = "area-unknown"
              }
              $body = @{
                query = $query
                variables = $variables
              } | ConvertTo-Json
              Invoke-RestMethod -Uri "https://api.github.com/graphql" -Method POST -Headers $headers -Body $body | Out-Null
            }
          }
